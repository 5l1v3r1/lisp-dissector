packet-lisp.c
=============
* Instead of the static variable "encapsulated", use the col_set_fence()
  function
* Actually show the encapsulation header when present
* Dissect locator sets in detail, highlighting individual fields in the hex
  data
* Implement support for the following LCAF types:
   * AS Number (3)
   * Application Data (4)
   * Geo Coordinates (5)
   * Opaque Key (6)
   * Nonce Locator (8)
   * Multicast Info (9)
   * Security Key (11)
   * Source/Dest Key (12)
* Improve LCAF parsing robustness, by ignoring length when dissecting known
  types
* Implement support for LISP-SEC

packet-lisp-data.c
==================
* Solve upstream buildbot issues:
  http://www.wireshark.org/download/automated/analysis/
* Use expert_add_info_format() for error messages

Other
=====
* Publish my work as a branch on a clone of the upstream experimental git
  repo
* Dino: in the Protocol column, add "/LISP" for data encapsulated packets, when an upper layer protocol dissecto decodes the inner data packet. For example, today a LISP encapsulated ICMP packet is shown simply as ICMP, and it is impossible to know at a glance if it a tunneled packet or not. This however requires hacking the main Wireshark code, not the LISP dissector code. The wreshark developers provided a workaround, adding a new column that shows the whole protocol stack is already possible today. But that is too verbose.
