                     LISP Packet Dissector for Wireshark
		     ===================================

The Locator/ID Separation Protocol (LISP) is a protocol developed within the
IETF LISP Working Group, with the main goal of improving global Internet
routing scalability by separating topologically aggregatable IP addresses used
for routing in the core (locators) from provider independent endpoint IP
addresses (identifiers).

The LISP data plane encapsulates packets when going from the identifier
numbering space to the locator numbering space (transit), and decapsulates
them when reaching the destination identifier numbering space. The LISP
control plane maintains a distributed database with the information necessary
to do the encapsulation.

This project implements LISP dissector code for the popular Wireshark network
analyzer. The code is organized in two files, one for data plane packets
(packet-lisp-data.c), another for control plane packets (packet-lisp.c). To
include this code with Wireshark, the files must be copied to the
./epan/dissectors directory in the wireshark source tree and their names added
to Makefile.common in the same directory. The stadard Wireshark source build
procedure must be followed afterwards to build the network analyzer.

The dissector code is developed against the 1.5.x development branch of
Wireshark. Due to minor API changes it will not compile with the stable 1.2.x
and 1.4.x branches. For now, backporting to those branches only requires
changing dissector_add_uint() calls to dissector_add().
